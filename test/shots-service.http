// ==================== VARIABLES ====================
// Set the group ID to use for shot operations
@group_id = 

### Get OpenID configuration from Keycloak
GET {{authorization_host}}/realms/{{realm}}/.well-known/openid-configuration

### Authenticate to Keycloak and get a token
# @name Authenticate
POST {{authorization_host}}/realms/{{realm}}/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

grant_type=password&client_id={{client_id}}&client_secret={{client_secret}}&username={{username}}&password={{password}}&scope=openid

### [TEST ONLY] Authenticate to Keycloak using UMA ticket grant (for advanced authorization testing)
# This call is for testing purposes only. It requests a token from Keycloak using the UMA ticket grant type,
# which is used for fine-grained authorization scenarios (RBAC).
# Spring Cloud Gateway is configured to do this automatically. Only used this if you need to call services directly.
# @name Authenticate
POST {{authorization_host}}/realms/{{realm}}/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded
Authorization: Bearer {{Authenticate.response.body.access_token}}

grant_type=urn:ietf:params:oauth:grant-type:uma-ticket&client_id={{client_id}}&client_secret={{client_secret}}&audience={{client_id}}&scope=openid

### Get all shots for a group
# @name GetShots
# Set {{group_id}} to the group ID you want to use
GET {{api_gateway_host}}/api/shots/group/{{group_id}}
Authorization: Bearer {{Authenticate.response.body.access_token}}

### Create a new shot
# @name CreateShot
POST {{api_gateway_host}}/api/shots
Content-Type: application/json
Authorization: Bearer {{Authenticate.response.body.access_token}}

{
  "groupId": "{{group_id}}",
  "velocity": 2800
}

### Get shot by ID
# @name GetShotById
GET {{api_gateway_host}}/api/shots/{{CreateShot.response.body.id}}
Authorization: Bearer {{Authenticate.response.body.access_token}}

### Update shot
# @name UpdateShot
PUT {{api_gateway_host}}/api/shots/{{CreateShot.response.body.id}}
Content-Type: application/json
Authorization: Bearer {{Authenticate.response.body.access_token}}

{
  "groupId": "{{group_id}}",
  "velocity": 2850
}

### Delete shot
# @name DeleteShot  
DELETE {{api_gateway_host}}/api/shots/{{CreateShot.response.body.id}}
Authorization: Bearer {{Authenticate.response.body.access_token}}
