# Example custom values for Spring Load Development
# Copy this file and modify as needed for your environment

# Global settings
global:
  imageRegistry: ""
  storageClass: "standard"  # Use your preferred storage class

# Application configuration
app:
  namespace: spring-load-development
  
  configServer:
    enabled: true
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

# PostgreSQL configuration
postgresql:
  enabled: true
  namespace: postgres
  
  auth:
    database: loadsdb
    username: user
    password: "mySecurePassword123"  # Change this!
    postgresPassword: "mySecurePassword123"  # Change this!
  
  persistence:
    enabled: true
    size: 20Gi
    storageClass: "standard"  # Use your preferred storage class
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Keycloak configuration
keycloak:
  enabled: true
  namespace: keycloak
  
  auth:
    adminUser: admin
    adminPassword: "mySecureAdminPassword123"  # Change this!
  
  postgresql:
    password: "mySecurePassword123"  # Should match PostgreSQL password
  
  ingress:
    enabled: true
    hostname: keycloak.local  # Change to your domain
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Observability stack configuration
observability:
  enabled: true
  namespace: observability
  
  # Loki configuration
  loki:
    enabled: true
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "standard"
    
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  
  # Tempo configuration
  tempo:
    enabled: true
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "standard"
    
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  
  # Prometheus configuration
  prometheus:
    enabled: true
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "standard"
    
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
  
  # Grafana configuration
  grafana:
    enabled: true
    
    auth:
      adminUser: admin
      adminPassword: "mySecureGrafanaPassword123"  # Change this!
    
    persistence:
      enabled: true
      size: 10Gi
      storageClass: "standard"
    
    ingress:
      enabled: true
      hostname: grafana.local  # Change to your domain
    
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
  
  # OpenTelemetry Collector configuration
  otelCollector:
    enabled: true
    
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000

# Node selector for specific node placement (optional)
nodeSelector: {}
# Example:
# nodeSelector:
#   node-type: compute

# Tolerations for node taints (optional)
tolerations: []
# Example:
# tolerations:
#   - key: "key1"
#     operator: "Equal"
#     value: "value1"
#     effect: "NoSchedule"

# Affinity rules for pod placement (optional)
affinity: {}
# Example:
# affinity:
#   nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: kubernetes.io/arch
#           operator: In
#           values:
#           - amd64
