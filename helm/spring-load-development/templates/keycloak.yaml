{{- if .Values.keycloak.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-config
  namespace: {{ .Values.keycloak.namespace }}
  labels:
    {{- include "spring-load-development.labels" . | nindent 4 }}
data:
  {{- range .Values.keycloak.extraEnvVars }}
  {{ .name }}: {{ .value | quote }}
  {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-secret
  namespace: {{ .Values.keycloak.namespace }}
  labels:
    {{- include "spring-load-development.labels" . | nindent 4 }}
type: Opaque
data:
  KC_DB_PASSWORD: {{ .Values.keycloak.postgresql.password | b64enc }}
  KC_BOOTSTRAP_ADMIN_USERNAME: {{ .Values.keycloak.auth.adminUser | b64enc }}
  KC_BOOTSTRAP_ADMIN_PASSWORD: {{ .Values.keycloak.auth.adminPassword | b64enc }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: {{ .Values.keycloak.namespace }}
  labels:
    app: keycloak
    {{- include "spring-load-development.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: "{{ .Values.keycloak.image.registry }}/{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
          imagePullPolicy: IfNotPresent
          args:
            - start-dev
            - --import-realm
          envFrom:
            - configMapRef:
                name: keycloak-config
            - secretRef:
                name: keycloak-secret
          ports:
            - name: http
              containerPort: {{ .Values.keycloak.service.http.port }}
              protocol: TCP
          volumeMounts:
            {{- if .Values.keycloak.realm.enabled }}
            - name: realm-config
              mountPath: /opt/keycloak/data/import
              readOnly: true
            {{- end }}
          readinessProbe:
            httpGet:
              path: /realms/master
              port: {{ .Values.keycloak.service.http.port }}
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /realms/master
              port: {{ .Values.keycloak.service.http.port }}
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        {{- if .Values.keycloak.realm.enabled }}
        - name: realm-config
          configMap:
            name: {{ .Values.keycloak.realm.configMapName | default "keycloak-realm-config" }}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  namespace: {{ .Values.keycloak.namespace }}
  labels:
    app: keycloak
    {{- include "spring-load-development.labels" . | nindent 4 }}
spec:
  type: {{ .Values.keycloak.service.type }}
  ports:
    - port: {{ .Values.keycloak.service.http.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: keycloak

---
{{- if .Values.keycloak.nodePort.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: keycloak-nodeport
  namespace: {{ .Values.keycloak.namespace }}
  labels:
    app: keycloak
    {{- include "spring-load-development.labels" . | nindent 4 }}
spec:
  type: NodePort
  ports:
    - name: http
      port: {{ .Values.keycloak.service.http.port }}
      targetPort: http
      nodePort: {{ .Values.keycloak.nodePort.port }}
  selector:
    app: keycloak
{{- end }}

{{- if .Values.keycloak.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  namespace: {{ .Values.keycloak.namespace }}
  labels:
    app: keycloak
    {{- include "spring-load-development.labels" . | nindent 4 }}
spec:
  rules:
    - host: {{ .Values.keycloak.ingress.hostname }}
      http:
        paths:
          - path: {{ .Values.keycloak.ingress.path }}
            pathType: {{ .Values.keycloak.ingress.pathType }}
            backend:
              service:
                name: keycloak-service
                port:
                  number: {{ .Values.keycloak.service.http.port }}
{{- end }}
{{- end }}
