services:
  db:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: loadsdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d loadsdb"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.1
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/loadsdb
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: password
      KC_HTTP_PORT: 7080
      KC_HOSTNAME: localhost
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - "7080:7080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    volumes:
      - ./docker/keycloack/realm.json:/opt/keycloak/data/import/realm.json
    command: ["start-dev", "--import-realm"]

  tracing-server:
    image: openzipkin/zipkin-slim:3
    container_name: zipkin
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
     - STORAGE_TYPE=mem
    ports:
     - 9411:9411

  config-server:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-config-server:0.0.2-SNAPSHOT
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - THC_PATH=/actuator/health/readiness
      - THC_PORT=8888
    healthcheck:
      test: ["CMD", "/workspace/health-check"]
      interval: 10s
      timeout: 5s
      retries: 5

  discovery-server:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-discovery-server:0.0.2-SNAPSHOT
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-api-gateway:0.0.2-SNAPSHOT
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_DISCOVERY_ENABLED=true
      - SPRING_ZIPKIN_BASE_URL=http://tracing-server:9411
    depends_on:
      discovery-server:
        condition: service_healthy

  rifles-service:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-rifles-service:0.0.2-SNAPSHOT
    container_name: rifles-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_R2DBC_URL=r2dbc:postgresql://db:5432/loadsdb
      - SPRING_R2DBC_USERNAME=user
      - SPRING_R2DBC_PASSWORD=password
      - SPRING_ZIPKIN_BASE_URL=http://tracing-server:9411
    depends_on:
      db:
        condition: service_healthy
      discovery-server:
        condition: service_healthy

  loads-service:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-loads-service:0.0.2-SNAPSHOT
    container_name: loads-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_R2DBC_URL=r2dbc:postgresql://db:5432/loadsdb
      - SPRING_R2DBC_USERNAME=user
      - SPRING_R2DBC_PASSWORD=password
      - SPRING_ZIPKIN_BASE_URL=http://tracing-server:9411
    depends_on:
      db:
        condition: service_healthy
      discovery-server:
        condition: service_healthy

volumes:
  postgres_data: