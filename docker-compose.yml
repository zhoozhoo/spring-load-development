services:
  jaeger:
    image: jaegertracing/all-in-one:1.68.0
    container_name: jaeger
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    environment:
      - LOG_LEVEL=debug

  db:
    image: postgres:17.4
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: loadsdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d loadsdb"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.2
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/loadsdb
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: password
      KC_HTTP_PORT: 7080
      KC_HOSTNAME: keycloak
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_FEATURES_DISABLED: opentelemetry
      KC_TRACING_ENABLED: true
      KC_TRACING_ENDPOINT: http://jaeger:4317
      KC_TRACING_SAMPLER_TYPE: parentbased_traceidratio
      KC_TRACING_JDBC_ENABLED: false
      QUARKUS_OTEL_TRACES_SUPPRESS_NON_APPLICATION_URIS: true
    ports:
      - "7080:7080"
      - "9000:9000"
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1"]
      interval: 15s
      timeout: 2s
      retries: 15
    volumes:
      - ./docker/keycloak/realm/realm.json:/opt/keycloak/data/import/realm.json
      - ./docker/keycloak/providers:/opt/keycloak/providers
    command: ["start-dev", "--import-realm"]

  config-server:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-config-server:0.0.3-SNAPSHOT
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - THC_PATH=/actuator/health/readiness
      - THC_PORT=8888
    healthcheck:
      test: ["CMD", "/workspace/health-check"]
      interval: 10s
      timeout: 5s
      retries: 5

  discovery-server:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-discovery-server:0.0.3-SNAPSHOT
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - THC_PATH=/actuator/health/readiness
      - THC_PORT=8761
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/workspace/health-check"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-api-gateway:0.0.3-SNAPSHOT
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - SPRING_CLOUD_DISCOVERY_ENABLED=true
      - SPRING_ZIPKIN_BASE_URL=http://tracing-server:9411
      - THC_PATH=/actuator/health/readiness
      - THC_PORT=8080
    depends_on:
      discovery-server:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/workspace/health-check"]
      interval: 10s
      timeout: 5s
      retries: 5

  rifles-service:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-rifles-service:0.0.3-SNAPSHOT
    container_name: rifles-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - SPRING_R2DBC_URL=r2dbc:postgresql://db:5432/loadsdb
      - SPRING_R2DBC_USERNAME=user
      - SPRING_R2DBC_PASSWORD=password
      - SPRING_ZIPKIN_BASE_URL=http://tracing-server:9411
      - THC_PATH=/actuator/health/readiness
      - THC_PORT=8081
    depends_on:
      db:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/workspace/health-check"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  loads-service:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-loads-service:0.0.3-SNAPSHOT
    container_name: loads-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - SPRING_R2DBC_URL=r2dbc:postgresql://db:5432/loadsdb
      - SPRING_R2DBC_USERNAME=user
      - SPRING_R2DBC_PASSWORD=password
      - SPRING_ZIPKIN_BASE_URL=http://tracing-server:9411
      - THC_PATH=/actuator/health/readiness
      - THC_PORT=8082
    depends_on:
      db:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/workspace/health-check"]
      interval: 10s
      timeout: 5s
      retries: 5

  admin-server:
    image: zhoozhoo.ca/spring-load-development/spring-loaddev-admin-server:0.0.3-SNAPSHOT
    container_name: admin-server
    ports:
      - "9090:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - THC_PATH=/actuator/health/readiness
      - THC_PORT=9090
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/workspace/health-check"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: